{"version":3,"sources":["../../lib/index.test.ts"],"sourcesContent":["import { test } from 'node:test';\nimport { strict as assert } from 'node:assert';\nimport detectPackageManager from './index.js';\n\ntest('detectPackageManager should detect pnpm from user agent', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  process.env.npm_config_user_agent = 'pnpm/8.6.12 npm/? node/v18.17.0 darwin arm64';\n  \n  const result = detectPackageManager();\n  \n  assert.equal(result.engine, 'pnpm');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  assert.ok(result.engineVersion);\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n});\n\ntest('detectPackageManager should detect yarn from user agent', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  process.env.npm_config_user_agent = 'yarn/1.22.19 npm/? node/v18.17.0 darwin arm64';\n  \n  const result = detectPackageManager();\n  \n  assert.equal(result.engine, 'yarn');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n});\n\ntest('detectPackageManager should detect bun from user agent', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  process.env.npm_config_user_agent = 'bun/1.0.0 npm/? node/v18.17.0 darwin arm64';\n  \n  const result = detectPackageManager();\n  \n  assert.equal(result.engine, 'bun');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n});\n\ntest('detectPackageManager should default to npm when no user agent', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  delete process.env.npm_config_user_agent;\n  \n  const result = detectPackageManager();\n  \n  assert.equal(result.engine, 'npm');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  assert.ok(typeof result.engineVersion === 'string');\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  }\n});\n\ntest('detectPackageManager should default to npm when user agent is empty', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  process.env.npm_config_user_agent = '';\n  \n  const result = detectPackageManager();\n  \n  assert.equal(result.engine, 'npm');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n});\n\ntest('detectPackageManager should return node version', () => {\n  const result = detectPackageManager();\n  \n  assert.ok(result.nodeVersion.startsWith('v'));\n  assert.match(result.nodeVersion, /^v\\d+\\.\\d+\\.\\d+/);\n});\n\ntest('detectPackageManager should return engine version', () => {\n  const result = detectPackageManager();\n  \n  // Should be able to get version for the detected engine\n  assert.ok(typeof result.engineVersion === 'string');\n});\n\ntest('detectPackageManager should handle startsWith correctly', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  \n  // Test that it uses startsWith, not includes\n  process.env.npm_config_user_agent = 'npm/10.0.0 containing-pnpm node/v18.17.0';\n  \n  const result = detectPackageManager();\n  \n  // Should detect as npm since it starts with npm, not pnpm\n  assert.equal(result.engine, 'npm');\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n});"],"names":["test","strict","assert","detectPackageManager","originalUserAgent","process","env","npm_config_user_agent","result","equal","engine","ok","nodeVersion","startsWith","engineVersion","match"],"mappings":"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"}