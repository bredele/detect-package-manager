{"version":3,"sources":["../../src/index.ts"],"sourcesContent":["import { execSync } from 'child_process';\nimport { existsSync } from 'fs';\nimport { resolve } from 'path';\n\nexport interface PackageManagerInfo {\n  engine: 'npm' | 'pnpm' | 'yarn' | 'bun' | 'unknown';\n  nodeVersion: string;\n  engineVersion: string;\n}\n\n/**\n * Detect the package manager engine and versions\n */\nexport default function detectPackageManager(cwd: string = process.cwd()): PackageManagerInfo {\n  const nodeVersion = process.version;\n  \n  // Try to detect engine from lock files\n  let engine = detectEngineFromLockFiles(cwd);\n  \n  // If not found, try environment variables\n  if (engine === 'unknown') {\n    engine = detectEngineFromEnvironment();\n  }\n  \n  // If still not found, try to detect from available binaries\n  if (engine === 'unknown') {\n    engine = detectEngineFromBinaries();\n  }\n  \n  const engineVersion = getEngineVersion(engine);\n  \n  return {\n    engine,\n    nodeVersion,\n    engineVersion\n  };\n}\n\nfunction detectEngineFromLockFiles(cwd: string): PackageManagerInfo['engine'] {\n  // Check for lock files in order of preference\n  const lockFiles = [\n    { file: 'bun.lockb', engine: 'bun' as const },\n    { file: 'pnpm-lock.yaml', engine: 'pnpm' as const },\n    { file: 'yarn.lock', engine: 'yarn' as const },\n    { file: 'package-lock.json', engine: 'npm' as const }\n  ];\n  \n  for (const { file, engine } of lockFiles) {\n    if (existsSync(resolve(cwd, file))) {\n      return engine;\n    }\n  }\n  \n  return 'unknown';\n}\n\nfunction detectEngineFromEnvironment(): PackageManagerInfo['engine'] {\n  // Check npm_config_user_agent\n  const userAgent = process.env.npm_config_user_agent;\n  if (userAgent) {\n    if (userAgent.includes('bun/')) return 'bun';\n    if (userAgent.includes('pnpm/')) return 'pnpm';\n    if (userAgent.includes('yarn/')) return 'yarn';\n    if (userAgent.includes('npm/')) return 'npm';\n  }\n  \n  // Check npm_execpath\n  const execPath = process.env.npm_execpath;\n  if (execPath) {\n    if (execPath.includes('bun')) return 'bun';\n    if (execPath.includes('pnpm')) return 'pnpm';\n    if (execPath.includes('yarn')) return 'yarn';\n    if (execPath.includes('npm')) return 'npm';\n  }\n  \n  return 'unknown';\n}\n\nfunction detectEngineFromBinaries(): PackageManagerInfo['engine'] {\n  const engines = ['bun', 'pnpm', 'yarn', 'npm'] as const;\n  \n  for (const engine of engines) {\n    try {\n      execSync(`${engine} --version`, { stdio: 'ignore' });\n      return engine;\n    } catch {\n      // Engine not available, continue\n    }\n  }\n  \n  return 'unknown';\n}\n\nfunction getEngineVersion(engine: PackageManagerInfo['engine']): string {\n  if (engine === 'unknown') {\n    return 'unknown';\n  }\n  \n  try {\n    const version = execSync(`${engine} --version`, { encoding: 'utf8' }).trim();\n    return version;\n  } catch {\n    return 'unknown';\n  }\n}"],"names":["execSync","existsSync","resolve","detectPackageManager","cwd","process","nodeVersion","version","engine","detectEngineFromLockFiles","detectEngineFromEnvironment","detectEngineFromBinaries","engineVersion","getEngineVersion","lockFiles","file","userAgent","env","npm_config_user_agent","includes","execPath","npm_execpath","engines","stdio","encoding","trim"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,gBAAgB;AACzC,SAASC,UAAU,QAAQ,KAAK;AAChC,SAASC,OAAO,QAAQ,OAAO;AAQ/B;;CAEC,GACD,eAAe,SAASC,qBAAqBC,MAAcC,QAAQD,GAAG,EAAE;IACtE,MAAME,cAAcD,QAAQE,OAAO;IAEnC,uCAAuC;IACvC,IAAIC,SAASC,0BAA0BL;IAEvC,0CAA0C;IAC1C,IAAII,WAAW,WAAW;QACxBA,SAASE;IACX;IAEA,4DAA4D;IAC5D,IAAIF,WAAW,WAAW;QACxBA,SAASG;IACX;IAEA,MAAMC,gBAAgBC,iBAAiBL;IAEvC,OAAO;QACLA;QACAF;QACAM;IACF;AACF;AAEA,SAASH,0BAA0BL,GAAW;IAC5C,8CAA8C;IAC9C,MAAMU,YAAY;QAChB;YAAEC,MAAM;YAAaP,QAAQ;QAAe;QAC5C;YAAEO,MAAM;YAAkBP,QAAQ;QAAgB;QAClD;YAAEO,MAAM;YAAaP,QAAQ;QAAgB;QAC7C;YAAEO,MAAM;YAAqBP,QAAQ;QAAe;KACrD;IAED,KAAK,MAAM,EAAEO,IAAI,EAAEP,MAAM,EAAE,IAAIM,UAAW;QACxC,IAAIb,WAAWC,QAAQE,KAAKW,QAAQ;YAClC,OAAOP;QACT;IACF;IAEA,OAAO;AACT;AAEA,SAASE;IACP,8BAA8B;IAC9B,MAAMM,YAAYX,QAAQY,GAAG,CAACC,qBAAqB;IACnD,IAAIF,WAAW;QACb,IAAIA,UAAUG,QAAQ,CAAC,SAAS,OAAO;QACvC,IAAIH,UAAUG,QAAQ,CAAC,UAAU,OAAO;QACxC,IAAIH,UAAUG,QAAQ,CAAC,UAAU,OAAO;QACxC,IAAIH,UAAUG,QAAQ,CAAC,SAAS,OAAO;IACzC;IAEA,qBAAqB;IACrB,MAAMC,WAAWf,QAAQY,GAAG,CAACI,YAAY;IACzC,IAAID,UAAU;QACZ,IAAIA,SAASD,QAAQ,CAAC,QAAQ,OAAO;QACrC,IAAIC,SAASD,QAAQ,CAAC,SAAS,OAAO;QACtC,IAAIC,SAASD,QAAQ,CAAC,SAAS,OAAO;QACtC,IAAIC,SAASD,QAAQ,CAAC,QAAQ,OAAO;IACvC;IAEA,OAAO;AACT;AAEA,SAASR;IACP,MAAMW,UAAU;QAAC;QAAO;QAAQ;QAAQ;KAAM;IAE9C,KAAK,MAAMd,UAAUc,QAAS;QAC5B,IAAI;YACFtB,SAAS,GAAGQ,OAAO,UAAU,CAAC,EAAE;gBAAEe,OAAO;YAAS;YAClD,OAAOf;QACT,EAAE,OAAM;QACN,iCAAiC;QACnC;IACF;IAEA,OAAO;AACT;AAEA,SAASK,iBAAiBL,MAAoC;IAC5D,IAAIA,WAAW,WAAW;QACxB,OAAO;IACT;IAEA,IAAI;QACF,MAAMD,UAAUP,SAAS,GAAGQ,OAAO,UAAU,CAAC,EAAE;YAAEgB,UAAU;QAAO,GAAGC,IAAI;QAC1E,OAAOlB;IACT,EAAE,OAAM;QACN,OAAO;IACT;AACF"}