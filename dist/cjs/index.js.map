{"version":3,"sources":["../../lib/index.ts"],"sourcesContent":["import { execSync } from 'child_process';\n\nexport interface PackageManagerInfo {\n  engine: 'npm' | 'pnpm' | 'yarn' | 'bun';\n  nodeVersion: string;\n  engineVersion: string;\n}\n\nconst getPackageManager = (): string => {\n  const userAgent = process.env.npm_config_user_agent || \"\";\n  if (userAgent.startsWith(\"pnpm\")) return \"pnpm\";\n  if (userAgent.startsWith(\"yarn\")) return \"yarn\";\n  if (userAgent.startsWith(\"bun\")) return \"bun\";\n  return \"npm\";\n};\n\n/**\n * Detect the package manager engine and versions\n */\nexport default function detectPackageManager(): PackageManagerInfo {\n  const nodeVersion = process.version;\n  const engine = getPackageManager();\n  \n  let engineVersion = 'unknown';\n  try {\n    engineVersion = execSync(`${engine} --version`, { encoding: 'utf8' }).trim();\n  } catch {\n    // If version command fails, keep as 'unknown'\n  }\n  \n  return {\n    engine: engine as PackageManagerInfo['engine'],\n    nodeVersion,\n    engineVersion\n  };\n}"],"names":["detectPackageManager","getPackageManager","userAgent","process","env","npm_config_user_agent","startsWith","nodeVersion","version","engine","engineVersion","execSync","encoding","trim"],"mappings":";;;;+BAgBA;;CAEC,GACD;;;eAAwBA;;;+BAnBC;AAQzB,MAAMC,oBAAoB;IACxB,MAAMC,YAAYC,QAAQC,GAAG,CAACC,qBAAqB,IAAI;IACvD,IAAIH,UAAUI,UAAU,CAAC,SAAS,OAAO;IACzC,IAAIJ,UAAUI,UAAU,CAAC,SAAS,OAAO;IACzC,IAAIJ,UAAUI,UAAU,CAAC,QAAQ,OAAO;IACxC,OAAO;AACT;AAKe,SAASN;IACtB,MAAMO,cAAcJ,QAAQK,OAAO;IACnC,MAAMC,SAASR;IAEf,IAAIS,gBAAgB;IACpB,IAAI;QACFA,gBAAgBC,IAAAA,uBAAQ,EAAC,GAAGF,OAAO,UAAU,CAAC,EAAE;YAAEG,UAAU;QAAO,GAAGC,IAAI;IAC5E,EAAE,OAAM;IACN,8CAA8C;IAChD;IAEA,OAAO;QACLJ,QAAQA;QACRF;QACAG;IACF;AACF"}