{"version":3,"sources":["../../src/index.test.ts"],"sourcesContent":["import { test } from 'node:test';\nimport { strict as assert } from 'node:assert';\nimport { writeFileSync, mkdirSync, rmSync, existsSync } from 'fs';\nimport { resolve } from 'path';\nimport detectPackageManager from './index.js';\n\nconst TEST_DIR = resolve(process.cwd(), 'test-temp');\n\nfunction setupTestDir() {\n  if (existsSync(TEST_DIR)) {\n    rmSync(TEST_DIR, { recursive: true });\n  }\n  mkdirSync(TEST_DIR, { recursive: true });\n}\n\nfunction cleanupTestDir() {\n  if (existsSync(TEST_DIR)) {\n    rmSync(TEST_DIR, { recursive: true });\n  }\n}\n\ntest('detectPackageManager should detect npm from package-lock.json', () => {\n  setupTestDir();\n  writeFileSync(resolve(TEST_DIR, 'package-lock.json'), '{}');\n  \n  const result = detectPackageManager(TEST_DIR);\n  \n  assert.equal(result.engine, 'npm');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  assert.ok(result.engineVersion);\n  \n  cleanupTestDir();\n});\n\ntest('detectPackageManager should detect pnpm from pnpm-lock.yaml', () => {\n  setupTestDir();\n  writeFileSync(resolve(TEST_DIR, 'pnpm-lock.yaml'), 'lockfileVersion: 6.0');\n  \n  const result = detectPackageManager(TEST_DIR);\n  \n  assert.equal(result.engine, 'pnpm');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  \n  cleanupTestDir();\n});\n\ntest('detectPackageManager should detect yarn from yarn.lock', () => {\n  setupTestDir();\n  writeFileSync(resolve(TEST_DIR, 'yarn.lock'), '# This file is generated by running \"yarn install\"');\n  \n  const result = detectPackageManager(TEST_DIR);\n  \n  assert.equal(result.engine, 'yarn');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  \n  cleanupTestDir();\n});\n\ntest('detectPackageManager should detect bun from bun.lockb', () => {\n  setupTestDir();\n  writeFileSync(resolve(TEST_DIR, 'bun.lockb'), 'bun-lockfile-format-v0');\n  \n  const result = detectPackageManager(TEST_DIR);\n  \n  assert.equal(result.engine, 'bun');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  \n  cleanupTestDir();\n});\n\ntest('detectPackageManager should prioritize bun over other lock files', () => {\n  setupTestDir();\n  writeFileSync(resolve(TEST_DIR, 'package-lock.json'), '{}');\n  writeFileSync(resolve(TEST_DIR, 'yarn.lock'), '# yarn');\n  writeFileSync(resolve(TEST_DIR, 'pnpm-lock.yaml'), 'lockfileVersion: 6.0');\n  writeFileSync(resolve(TEST_DIR, 'bun.lockb'), 'bun-lockfile-format-v0');\n  \n  const result = detectPackageManager(TEST_DIR);\n  \n  assert.equal(result.engine, 'bun');\n  \n  cleanupTestDir();\n});\n\ntest('detectPackageManager should return node version', () => {\n  setupTestDir();\n  \n  const result = detectPackageManager(TEST_DIR);\n  \n  assert.ok(result.nodeVersion.startsWith('v'));\n  assert.match(result.nodeVersion, /^v\\d+\\.\\d+\\.\\d+/);\n  \n  cleanupTestDir();\n});\n\ntest('detectPackageManager should return engine version when engine is known', () => {\n  setupTestDir();\n  writeFileSync(resolve(TEST_DIR, 'package-lock.json'), '{}');\n  \n  const result = detectPackageManager(TEST_DIR);\n  \n  // Should be able to get npm version since npm is available\n  assert.ok(result.engineVersion);\n  assert.notEqual(result.engineVersion, 'unknown');\n  \n  cleanupTestDir();\n});\n\ntest('detectPackageManager should use current working directory by default', () => {\n  const result = detectPackageManager();\n  \n  assert.ok(result.engine);\n  assert.ok(result.nodeVersion.startsWith('v'));\n  assert.ok(result.engineVersion);\n});\n\ntest('detectPackageManager should detect from environment variables', () => {\n  setupTestDir();\n  \n  // Mock npm_config_user_agent\n  const originalUserAgent = process.env.npm_config_user_agent;\n  process.env.npm_config_user_agent = 'pnpm/8.6.12 npm/? node/v18.17.0 darwin arm64';\n  \n  const result = detectPackageManager(TEST_DIR);\n  \n  // Should detect pnpm from user agent even without lock file\n  assert.equal(result.engine, 'pnpm');\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n  \n  cleanupTestDir();\n});\n\ntest('detectPackageManager should return unknown for engine when no detection method works', () => {\n  setupTestDir();\n  \n  // Clear environment variables that could interfere\n  const originalUserAgent = process.env.npm_config_user_agent;\n  const originalExecPath = process.env.npm_execpath;\n  delete process.env.npm_config_user_agent;\n  delete process.env.npm_execpath;\n  \n  const result = detectPackageManager(TEST_DIR);\n  \n  // Should still return a valid structure\n  assert.ok(result.engine);\n  assert.ok(result.nodeVersion.startsWith('v'));\n  assert.ok(typeof result.engineVersion === 'string');\n  \n  // Restore environment variables\n  if (originalUserAgent) process.env.npm_config_user_agent = originalUserAgent;\n  if (originalExecPath) process.env.npm_execpath = originalExecPath;\n  \n  cleanupTestDir();\n});"],"names":["TEST_DIR","resolve","process","cwd","setupTestDir","existsSync","rmSync","recursive","mkdirSync","cleanupTestDir","test","writeFileSync","result","detectPackageManager","assert","equal","engine","ok","nodeVersion","startsWith","engineVersion","match","notEqual","originalUserAgent","env","npm_config_user_agent","originalExecPath","npm_execpath"],"mappings":"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"}