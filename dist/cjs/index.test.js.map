{"version":3,"sources":["../../lib/index.test.ts"],"sourcesContent":["import { test } from 'node:test';\nimport { strict as assert } from 'node:assert';\nimport detectPackageManager from './index.js';\n\ntest('detectPackageManager should detect pnpm from user agent', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  process.env.npm_config_user_agent = 'pnpm/8.6.12 npm/? node/v18.17.0 darwin arm64';\n  \n  const result = detectPackageManager();\n  \n  assert.equal(result.engine, 'pnpm');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  assert.ok(result.engineVersion);\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n});\n\ntest('detectPackageManager should detect yarn from user agent', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  process.env.npm_config_user_agent = 'yarn/1.22.19 npm/? node/v18.17.0 darwin arm64';\n  \n  const result = detectPackageManager();\n  \n  assert.equal(result.engine, 'yarn');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n});\n\ntest('detectPackageManager should detect bun from user agent', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  process.env.npm_config_user_agent = 'bun/1.0.0 npm/? node/v18.17.0 darwin arm64';\n  \n  const result = detectPackageManager();\n  \n  assert.equal(result.engine, 'bun');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n});\n\ntest('detectPackageManager should default to npm when no user agent', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  delete process.env.npm_config_user_agent;\n  \n  const result = detectPackageManager();\n  \n  assert.equal(result.engine, 'npm');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  assert.ok(typeof result.engineVersion === 'string');\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  }\n});\n\ntest('detectPackageManager should default to npm when user agent is empty', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  process.env.npm_config_user_agent = '';\n  \n  const result = detectPackageManager();\n  \n  assert.equal(result.engine, 'npm');\n  assert.ok(result.nodeVersion.startsWith('v'));\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n});\n\ntest('detectPackageManager should return node version', () => {\n  const result = detectPackageManager();\n  \n  assert.ok(result.nodeVersion.startsWith('v'));\n  assert.match(result.nodeVersion, /^v\\d+\\.\\d+\\.\\d+/);\n});\n\ntest('detectPackageManager should return engine version', () => {\n  const result = detectPackageManager();\n  \n  // Should be able to get version for the detected engine\n  assert.ok(typeof result.engineVersion === 'string');\n});\n\ntest('detectPackageManager should handle startsWith correctly', () => {\n  const originalUserAgent = process.env.npm_config_user_agent;\n  \n  // Test that it uses startsWith, not includes\n  process.env.npm_config_user_agent = 'npm/10.0.0 containing-pnpm node/v18.17.0';\n  \n  const result = detectPackageManager();\n  \n  // Should detect as npm since it starts with npm, not pnpm\n  assert.equal(result.engine, 'npm');\n  \n  // Restore original environment\n  if (originalUserAgent) {\n    process.env.npm_config_user_agent = originalUserAgent;\n  } else {\n    delete process.env.npm_config_user_agent;\n  }\n});"],"names":["test","originalUserAgent","process","env","npm_config_user_agent","result","detectPackageManager","assert","equal","engine","ok","nodeVersion","startsWith","engineVersion","match"],"mappings":"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"}